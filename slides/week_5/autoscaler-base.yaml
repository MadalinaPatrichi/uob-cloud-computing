---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scrypt-script
data:
  server.py: |
      import hashlib, http.server, socketserver, base64, os
      class ScryptHandler(http.server.BaseHTTPRequestHandler):
          cost = int(os.environ.get('COST', '14'))
          def do_POST(self):
              self.send_response(200)
              self.end_headers()
              self.wfile.write(
                  base64.b64encode(
                      hashlib.scrypt(b"blah", salt=b"salt", n=(1 << self.cost), r=5, p=10)
                  )
              )

      try:
          server = http.server.HTTPServer(('', 8000), ScryptHandler)
          server.serve_forever()
      except KeyboardInterrupt:
          server.socket.close()

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scrypt-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scrypt-server
  template:
    metadata:
      labels:
        app: scrypt-server
    spec:
      containers:
      - name: python
        image: python:3.6
        args: ["python", "/app/server.py"]
        resources:
          limits:
            cpu: 200m
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: script-vol
          mountPath: /app
      volumes:
      - name: script-vol
        configMap:
          name: scrypt-script

---
apiVersion: v1
kind: Service
metadata:
  name: scrypt-svc
spec:   
  selector:
    app: scrypt-server
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: scrypt-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: scrypt.uob.example.local
    http:
      paths:
      - path: /
        backend:
          serviceName: scrypt-svc
          servicePort: 8000
